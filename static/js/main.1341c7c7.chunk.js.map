{"version":3,"sources":["helpers/shuffleCards.js","components/GameInfo.js","components/Cards.js","components/App.js","assets/1.jpg","assets/2.jpeg","assets/3.jpg","assets/4.jpg","assets/5.jpg","assets/6.jpg","assets/7.jpg","assets/8.jpg","assets/9.jpeg","assets/10.jpg","assets/11.jpg","assets/12.jpg","data/unshuffledCards.js","theme/Theme.js.js","theme/GlobalStyle.js","theme/init.js","index.js"],"names":["buildAvailablePositions","currentPosition","shuffledCards","availablePositions","Array","keys","splice","forEach","card","position","findIndex","i","GameInfo","score","highScore","isWon","id","Cards","cards","handleCardClick","map","idx","className","onClick","src","img","alt","text","App","unshuffledCards","useState","setCards","setIsWon","setScore","setHighScore","clickedCards","setClickedCards","shuffleCards","randomPosition","Math","floor","random","length","useEffect","cardID","includes","prevScore","prevClickedCards","Card","uniqid","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","Theme","grayscale","GlobalStyle","createGlobalStyle","normalize","props","theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1341c7c7.chunk.js","sourcesContent":["const buildAvailablePositions = (currentPosition, shuffledCards) => {\n  const availablePositions = [...Array(13).keys()];\n  availablePositions.splice(currentPosition, 1);\n  shuffledCards.forEach((card, position) => {\n    availablePositions.splice(\n      availablePositions.findIndex((i) => i === position),\n      1\n    );\n  });\n  return availablePositions;\n};\n\nexport default buildAvailablePositions;\n","const GameInfo = ({ score, highScore, isWon }) => {\n  return (\n    <div id=\"gameInfo\">\n      <div id=\"scoreCurrent\">Current {score}</div>\n      <div id=\"gameWon\">{isWon ? \"You won!\" : \"Memory Game\"}</div>\n      <div id=\"scoreHigh\"> Best {highScore} </div>\n    </div>\n  );\n};\n\nexport default GameInfo;\n","const Cards = ({ cards, handleCardClick }) => {\n  return (\n    <div id=\"cardsContainer\">\n      {cards.map((card, idx) => {\n        return (\n          <div\n            className=\"card\"\n            key={card.id}\n            onClick={() => handleCardClick(card.id)}\n          >\n            <img src={card.img} alt={idx} />\n            <p>{card.text}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport buildAvailablePositions from \"../helpers/shuffleCards\";\n\nimport GameInfo from \"./GameInfo\";\nimport Cards from \"./Cards\";\n\nconst App = ({ unshuffledCards }) => {\n  const [cards, setCards] = useState(unshuffledCards);\n  const [isWon, setIsWon] = useState(false);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [clickedCards, setClickedCards] = useState([]);\n\n  const shuffleCards = (cards) => {\n    const shuffledCards = [];\n    cards.forEach((card, currentPosition) => {\n      const availablePositions = buildAvailablePositions(\n        currentPosition,\n        shuffledCards\n      );\n\n      const randomPosition =\n        availablePositions[\n          Math.floor(Math.random() * availablePositions.length)\n        ];\n\n      shuffledCards[randomPosition] = card;\n    });\n\n    return shuffledCards;\n  };\n\n  const resetGame = () => {\n    setClickedCards([]);\n    setHighScore(score);\n    setScore(0);\n  };\n\n  const handleCardClick = (cardID) => {\n    if (clickedCards.includes(cardID)) {\n      resetGame();\n    } else {\n      setScore((prevScore) => prevScore + 1);\n      setClickedCards((prevClickedCards) => [...prevClickedCards, cardID]);\n    }\n    setCards(shuffleCards(cards));\n  };\n\n  useEffect(() => {\n    setCards(shuffleCards(cards));\n  }, []);\n\n  useEffect(() => {\n    if (score === 12) {\n      setIsWon(true);\n    }\n  }, [score]);\n\n  return (\n    <>\n      <GameInfo score={score} highScore={highScore} isWon={isWon} />\n      <Cards cards={cards} handleCardClick={handleCardClick} />\n    </>\n  );\n};\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/1.888ceb92.jpg\";","export default __webpack_public_path__ + \"static/media/2.15614cc0.jpeg\";","export default __webpack_public_path__ + \"static/media/3.108e33ce.jpg\";","export default __webpack_public_path__ + \"static/media/4.bcd63d2e.jpg\";","export default __webpack_public_path__ + \"static/media/5.3fc604c8.jpg\";","export default __webpack_public_path__ + \"static/media/6.e4d1211b.jpg\";","export default __webpack_public_path__ + \"static/media/7.5d967d3c.jpg\";","export default __webpack_public_path__ + \"static/media/8.737ac082.jpg\";","export default __webpack_public_path__ + \"static/media/9.57fde20c.jpeg\";","export default __webpack_public_path__ + \"static/media/10.fa55967e.jpg\";","export default __webpack_public_path__ + \"static/media/11.3fb8509d.jpg\";","export default __webpack_public_path__ + \"static/media/12.bf4570f9.jpg\";","import uniqid from \"uniqid\";\n\nimport one from \"../assets/1.jpg\";\nimport two from \"../assets/2.jpeg\";\nimport three from \"../assets/3.jpg\";\nimport four from \"../assets/4.jpg\";\nimport five from \"../assets/5.jpg\";\nimport six from \"../assets/6.jpg\";\nimport seven from \"../assets/7.jpg\";\nimport eight from \"../assets/8.jpg\";\nimport nine from \"../assets/9.jpeg\";\nimport ten from \"../assets/10.jpg\";\nimport eleven from \"../assets/11.jpg\";\nimport twelve from \"../assets/12.jpg\";\n\nconst Card = (img, text) => {\n  return {\n    id: uniqid(),\n    text,\n    img,\n  };\n};\n\nconst cards = [\n  Card(one, \"Butter Chicken\"),\n  Card(two, \"Aloo Gobi Masala\"),\n  Card(three, \"Samosa\"),\n  Card(four, \"Matar Paneer\"),\n  Card(five, \"Vegan Tofu Tikka Masala\"),\n  Card(six, \"Lamb Curry\"),\n  Card(seven, \"Masala Chai\"),\n  Card(eight, \"Chicken Tikka Masala\"),\n  Card(nine, \"Butter Chicken\"),\n  Card(ten, \"Garlic Naan\"),\n  Card(eleven, \"Butter Naan\"),\n  Card(twelve, \"Tandoori Chicken\"),\n];\n\nexport default cards;\n","const Theme = {\n  grayscale: {\n    0: \"0%\",\n    1: \"7%\",\n    2: \"16%\",\n    3: \"26%\",\n    4: \"38%\",\n    5: \"50%\",\n    6: \"63%\",\n    7: \"74%\",\n    8: \"85%\",\n    9: \"94%\",\n    10: \"100%\",\n  },\n};\n\nexport default Theme;\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\nimport init from \"./init.js\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n\n  ${init} \n  \n  body {\n    background-color: hsl(0, 0%, ${(props) => props.theme.grayscale[8]});\n    display: flex;\n    justify-content: center;\n    word-break: keep-all;\n  }\n\n  #root {\n    margin-inline: 1rem;\n    display: flex;\n    flex-direction: column;\n    background-color: hsl(0, 0%, ${(props) => props.theme.grayscale[8]});\n  }\n  \n  #gameInfo {\n    width: 100%;\n    border-radius: 0 0 16px 16px;\n    display: flex;\n    justify-content: space-between;\n    background-color: hsl(0, 0%, ${(props) => props.theme.grayscale[9]});\n  }\n  \n  #gameInfo div {\n    padding-block: 7px;\n    padding-inline: 16px;\n    flex: 1;\n  }\n  \n  #scoreHigh {\n    display: flex;\n    justify-content: flex-end;\n  }\n  \n  #gameWon {\n    display: flex;\n    justify-content: center;\n  }\n  \n  #cardsContainer {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    max-width: 1300px;\n    max-height: 100%;\n    flex: 1;\n  }\n  \n  .card {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-direction: column;\n    border-radius: 7px;\n    background-color: hsl(0, 0%, ${(props) => props.theme.grayscale[9]});\n    width: 280px;\n    height: 280px;\n    margin: 7px;\n    cursor: pointer;\n    user-select: none;\n    transition: all 500ms;\n    padding-top: 16px;\n  }\n  \n  .card img {\n    border-radius: 7px 7px 16px 16px;\n    width: 87%;\n    height: 78%;\n    object-fit: cover;\n    object-position: center;\n    transition: all 300ms;\n    flex: 1;\n\n  }\n\n  .card p {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    margin: 0;\n    padding: 7px;\n    padding-top: 16px;\n  }\n\n  .card:hover {\n    color: hsl(16, 94%, 50%);\n    border-radius: 7px 7px 16px 16px;\n  }\n\n  .card:hover img {\n    transform: scale(1.07)\n  }\n\n  `;\nexport default GlobalStyle;\n","const init = `\n*,\n*::after,\n*::before {\n  box-sizing: border-box;\n}\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  height: 100%;\n  font-family: sans-serif;\n}\n\n#root {\n  height: 100%;\n}\n\n`;\n\nexport default init;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport unshuffledCards from \"./data/unshuffledCards\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport Theme from \"./theme/Theme.js\";\nimport GlobalStyle from \"./theme/GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={Theme}>\n      <GlobalStyle />\n      <App unshuffledCards={unshuffledCards} />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}